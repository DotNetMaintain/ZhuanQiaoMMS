#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RM.Busines.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RM_DB")]
	public partial class RM_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBase_DictionaryInfo(Base_DictionaryInfo instance);
    partial void UpdateBase_DictionaryInfo(Base_DictionaryInfo instance);
    partial void DeleteBase_DictionaryInfo(Base_DictionaryInfo instance);
    #endregion
		
		public RM_DBDataContext() : 
				base(global::RM.Busines.Properties.Settings.Default.RM_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RM_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RM_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RM_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RM_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Base_DictionaryInfo> Base_DictionaryInfo
		{
			get
			{
				return this.GetTable<Base_DictionaryInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DictionaryInfo")]
	public partial class Base_DictionaryInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DictionaryInfo_ID;
		
		private string _TypeCode;
		
		private string _TypeName;
		
		private string _ValueCode;
		
		private string _ValueName;
		
		private string _Operator;
		
		private System.Nullable<System.DateTime> _OperateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDictionaryInfo_IDChanging(int value);
    partial void OnDictionaryInfo_IDChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnValueCodeChanging(string value);
    partial void OnValueCodeChanged();
    partial void OnValueNameChanging(string value);
    partial void OnValueNameChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOperateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOperateDateChanged();
    #endregion
		
        //public Base_DictionaryInfo()
        //{
        //    OnCreated();
        //}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryInfo_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DictionaryInfo_ID
		{
			get
			{
				return this._DictionaryInfo_ID;
			}
			set
			{
				if ((this._DictionaryInfo_ID != value))
				{
					this.OnDictionaryInfo_IDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryInfo_ID = value;
					this.SendPropertyChanged("DictionaryInfo_ID");
					this.OnDictionaryInfo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ValueCode
		{
			get
			{
				return this._ValueCode;
			}
			set
			{
				if ((this._ValueCode != value))
				{
					this.OnValueCodeChanging(value);
					this.SendPropertyChanging();
					this._ValueCode = value;
					this.SendPropertyChanged("ValueCode");
					this.OnValueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueName", DbType="VarChar(50)")]
		public string ValueName
		{
			get
			{
				return this._ValueName;
			}
			set
			{
				if ((this._ValueName != value))
				{
					this.OnValueNameChanging(value);
					this.SendPropertyChanging();
					this._ValueName = value;
					this.SendPropertyChanged("ValueName");
					this.OnValueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(20)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperateDate
		{
			get
			{
				return this._OperateDate;
			}
			set
			{
				if ((this._OperateDate != value))
				{
					this.OnOperateDateChanging(value);
					this.SendPropertyChanging();
					this._OperateDate = value;
					this.SendPropertyChanged("OperateDate");
					this.OnOperateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
